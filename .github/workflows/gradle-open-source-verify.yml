name: gradle-open-source-verify
on:
  workflow_call:
    inputs:
      java-version:
        description: "Java Runtime Version"
        required: false
        type: string
        default: 21
      tasks:
        description: "Gradle task parameters"
        required: false
        type: string
        default: build
      log-level:
        description: "Gradle log level"
        required: false
        type: string
        default: ""
      runs-on:
        description: "Runner"
        required: false
        type: string
        default: "ubuntu-24.04"
      java-distribution:
        description: "Java distribution for setup-java"
        required: false
        type: string
        default: "liberica"
jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Build with Gradle Wrapper
        run: |
          GRADLE_LOG_ARGUMENT=""
          # detect log level      
          if [ "${{ inputs.log-level }}" = "info" ]; then
            GRADLE_LOG_ARGUMENT="--info"
          elif [ "${{ inputs.log-level }}" = "debug" ]; then
            GRADLE_LOG_ARGUMENT="--debug"
          elif [ "${{ inputs.log-level }}" = "warn" ]; then
            GRADLE_LOG_ARGUMENT="--warn"
          fi
          ./gradlew ${{ inputs.tasks }} $GRADLE_LOG_ARGUMENT --stacktrace
      - name: Store build reports
        if: failure()
        uses: actions/upload-artifact@v4
        with:
            name: reports-${{ github.job }}-${{ github.run_id }}-${{ github.run_attempt }}
            path: |
                **/build/reports/
                **/build/test-results/