name: Release tag to Maven Central
description: "Publish release artifact to Maven Central for a Maven library project. The workflow activates a 'release' profile upon running deploy."
on:
  workflow_call:
    inputs:
      ref:
        description: "The branch, tag or SHA to checkout. See checkout action for more details."
        type: string
        required: false
        default: ''
      java-version:
        description: "Java Runtime Version"
        required: false
        type: string
        default: 21
      release-prefix:
        description: "Prefix for release tag"
        required: false
        type: string
        default: "release-"
      server-id:
        description: "server id used in pom to reference generated settings.xml"
        type: string
        required: false
        default: ossrh
      skip-tests:
        description: "Skip test"
        required: false
        type: boolean
        default: false
      commands:
        description: "Maven command parameters"
        required: false
        type: string
        default: "-B -Prelease clean deploy"
      runs-on:
        description: "Runner"
        required: false
        type: string
        default: "ubuntu-24.04"
      java-distribution:
        description: "Java distribution for setup-java"
        required: false
        type: string
        default: "liberica"
      fetch-depth:
        description: "Number of commits to fetch. 0 indicates all history for all branches and tags."
        required: false
        type: string
        default: "0"
    secrets:
      SONATYPE_AUTH_USER:
        required: true
      SONATYPE_AUTH_TOKEN:
        required: true
      SONATYPE_GPG_KEY:
        required: true
      SONATYPE_GPG_KEY_NAME:
        required: true
      SONATYPE_GPG_KEY_PASSWORD:
        required: true
    outputs:
      version:
        description: Release version
        value: ${{ jobs.release.outputs.version }}
      tag:
        description: Release tag
        value: ${{ jobs.release.outputs.tag }}

jobs:
  release:
    outputs:
      version: ${{ steps.publish.outputs.version }}
      tag: ${{ steps.publish.outputs.tag }}
    runs-on: ${{ inputs.runs-on }}
    steps:
      - uses: actions/checkout@v4
        if: inputs.ref == ''
        with:
          fetch-tags: true
          fetch-depth: inputs.fetch-depth
      - uses: actions/checkout@v4
        if: inputs.ref != ''
        with:
          ref: ${{ inputs.inputs.ref }}
          fetch-tags: true
          fetch-depth: inputs.fetch-depth
      - name: Set up Java ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.java-version }}
          distribution: ${{ inputs.java-distribution }}
          server-id: ${{ inputs.server-id }}
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Publish
        id: publish
        env:
          MAVEN_USERNAME: ${{ secrets.SONATYPE_AUTH_USER }}
          MAVEN_PASSWORD: ${{ secrets.SONATYPE_AUTH_TOKEN }}
          SONATYPE_GPG_KEY: ${{ secrets.SONATYPE_GPG_KEY }}
          SONATYPE_GPG_KEY_NAME: ${{ secrets.SONATYPE_GPG_KEY_NAME }}
          REL_PREFIX: ${{ inputs.release-prefix }}
        run: |
          echo "Preparing to publish tag to Maven Central"
          if [ -z "${{ inputs.ref }}" ]; then
            RELEASE_TAG=$(git describe --tags --exact-match --match "${{ inputs.release-prefix }}*" HEAD)
          else 
            RELEASE_TAG="${{ inputs.ref }}"
          fi
          echo "Release tag is $RELEASE_TAG"
          REL_LEN=$(echo ${{ inputs.release-prefix }} | wc -c | xargs)
          RELEASE_VERSION=$(echo $RELEASE_TAG | cut -c ${REL_LEN}-)
          echo "Release version is $RELEASE_VERSION"
          mvn -B versions:set -DnewVersion=$RELEASE_VERSION

          MAVEN_SKIP_TESTS_ARGUMENT=""
          if [ "${{ inputs.skip-tests }}" = "true" ]; then
            MAVEN_SKIP_TESTS_ARGUMENT="-DskipTests"
            echo "Note: Skipping tests"
          fi

          # prepare key
          echo -n $SONATYPE_GPG_KEY | base64 --decode | gpg --batch --no-tty --import --yes

          echo "Releasing $RELEASE_VERSION .."

          mvn $MAVEN_SKIP_TESTS_ARGUMENT ${{ inputs.commands }}
          echo "Released $RELEASE_VERSION"

          # create summary
          COMMIT_MESSAGE=$(git log --format="%B" -n 1)
          echo "$COMMIT_MESSAGE" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY # this is a blank line
          echo ":tada: Published $RELEASE_VERSION to Maven Central." >> $GITHUB_STEP_SUMMARY

          # workflow output
          echo "version=$RELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "tag=$RELEASE_TAG" >> $GITHUB_OUTPUT
